{"name":"Fusionwebapp","tagline":"Rapid application development project for java","body":"FusionWebApp\r\n============\r\n\r\nFusionwebApp is a set of Java Frameworks for Rapid Development of Enterprise Web Applications. It is a project fully configured and ready for you to start your own web applications.\r\nAnd the best part is that FusionWebApp is completely customizable, it is a maven project built upon the following frameworks:\r\n\r\n+ Jquery EasyUI\r\n+ Sitemesh\r\n+ Spring\r\n+ ActiveJdbc\r\n+ JasperReport\r\n\r\n![FusionWebApp Crud](http://imageshack.com/a/img191/8933/74hs.png)\r\n\r\nIt is simple, requires minimal configuration, is fast, is scalable, view layer using lightweight requests RESTful/json, standardized on the MVC. Is Java!\r\n\r\n## Getting Started\r\n\r\nFirst, download Maven (http://maven.apache.org/download.cgi) and follow the installation instructions (http://maven.apache.org/download.cgi#Installation). After that, type the following in a terminal or in a command prompt:\r\n\r\n```\r\n$ mvn --version\r\n```\r\n\r\nDownload the fusionwebapp and place in a folder of your choice, this will be your project folder. \r\n\r\n```\r\n$ cd MyProjectFolder\r\n$ mvn install\r\n$ mvn package\r\n```\r\n\r\nNow your project can now be started!\r\nWith these commands you should have generated a WAR file relating to your project. This is all you need to know to generate your project, now let's learn how to configure it\r\n\r\n##Configuring the Database\r\nFusionWebApp has two configuration files to the database, the first refers to data migration and is found in **pom.xml**, if you want to use data migration then you need to change this file and put the properties pertaining to your database\r\n\r\n    <properties>\r\n       <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>\r\n       <jdbc.url>jdbc:mysql://localhost:3306/mydb?characterEncoding=utf-8</jdbc.url>\r\n       <jdbc.username>yourdatabaseuser</jdbc.username>\r\n       <jdbc.password>yourdatabasepassword</jdbc.password>\r\n    </properties>\r\n    \r\n    \r\nThe other configuration file is a type of properties, the main settings of the database and the application are there.\r\n\r\n```\r\n#Generate Config\r\napp.package=com.fusion.app\r\n\r\n#Datasource Config\r\njdbc.driver=com.mysql.jdbc.Driver\r\njdbc.url=jdbc:mysql://localhost:3306/fusiondb?characterEncoding=utf-8\r\njdbc.username=root\r\njdbc.password=root\r\n\r\n#Locale Config\r\napp.locale=en\r\n```\r\n\r\n###How to Migrate\r\n\r\nFusionWebApp use the CarbonFive Plugin. To create a new migration, execute this command:\r\n\r\n```\r\n$ cd MyProjectFolder\r\n$ mvn db-migration:new -Dname=create_people_table\r\n```\r\n\r\nthis action would create an empty file in this localization:\r\n\r\n```\r\n$ MyProjectFolder\\src\\main\\resources\\db\\migrations\\20101112230703_create_people_table.sql\r\n```\r\nAfter that, add a sql code to the file:\r\n\r\n    CREATE TABLE people (\r\n      id  int(11) DEFAULT NULL auto_increment PRIMARY KEY,\r\n      first_name VARCHAR(128),\r\n      last_name VARCHAR(128),\r\n      created_at DATETIME,\r\n      updated_at DATETIME\r\n    );\r\n\r\nFrom the command line, you can run the migration plugin like this:\r\n\r\n```\r\n$ mvn db-migration:migrate\r\n```\r\n\r\nYou can get more information about the CarbonFive migration here: https://code.google.com/p/c5-db-migration/wiki/MavenPlugin\r\n\r\n##Scaffold\r\n\r\nWith FusionWebApp is possible to generate a CRUD code complete with Model, Controller, Service and View. This feature streamlines the development of various parts of a project, all code generated is easily customized. To generate a CRUD type the following in a terminal or in a command prompt:\r\n\r\n```\r\n$ cd MyProjectFolder\r\n$ mvn exec:java -Dexec.args=\"-m=Person\"\r\n```\r\n\r\nSimple as that! Our Generator read you table metadata, in this case people and create to you a complete crud, go to url /people and see it!.\r\n\r\n![FusionWebApp Crud2](http://imageshack.com/a/img577/1306/sc0c.png)\r\n\r\nIt is also possible to send as parameter the desired table, or to inform that the generator does not pluralize the model.\r\n\r\n-t for table\r\n\r\n```\r\n$ cd MyProjectFolder\r\n$ mvn exec:java -Dexec.args=\"-m=Person -t=mytable\"\r\n```\r\n\r\nor -np to no pluralize\r\n\r\n```\r\n$ cd MyProjectFolder\r\n$ mvn exec:java -Dexec.args=\"-m=Person -np\"\r\n```\r\n\r\n##Why use FusionWebApp\r\n\r\nThere are several frameworks with the same proposal of agile development, which brings FusionWebApp novelty is freedom within your project, because it is built on everything that is being used more.\r\nHere you increase your good skills, change that is needed and has complete mastery of your project. FusionWebApp does the hard work that the entire setup is based on best practices for development and also productivity of Ruby on Rails.\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}